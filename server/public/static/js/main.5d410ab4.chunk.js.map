{"version":3,"sources":["components/PxcLang.js","components/ProjectName.js","components/Brand.js","components/Header.js","components/Menu.js","components/FileInput.js","components/Label.js","components/TextInput.js","components/Status.js","hooks/use-text-input.js","components/Configuration.js","hooks/use-interval.js","helpers/utils.js","components/MainContentPanel.js","components/Footer.js","App.js","index.js"],"names":["PxcLang","className","id","href","ProjectName","props","projectName","title","Brand","src","width","height","alt","Header","style","display","Menu","deviceName","deviceArticle","menuItemsGroups","map","menuItemGroup","key","backgroundPosition","name","items","menuItem","FileInput","label","value","onChange","setTextInput","uploadUrl","inputRef","useRef","float","hidden","type","border","fontSize","padding","e","target","files","formData","FormData","append","fetch","method","body","then","res","json","data","filePath","ref","onClick","preventDefault","current","click","readOnly","disabled","Label","paddingBottom","TextInput","placeholder","maxLength","required","StatusEnum","getColorByStatus","status","Status","message","backgroundColor","borderRadius","marginRight","color","useTextInput","initialValue","useState","setValue","set","bind","event","Configuration","appConfigUrl","appStatusUrl","brokerAddress","bindBrokerAddress","setBrokerAddress","rootCaFle","bindRootCaFile","setRootCaFile","certFile","bindCertFile","setCertFile","keyFile","bindKeyFile","setKeyFile","clientId","bindClientId","setClientId","publishTopic","bindPublishTopic","setPublishTopic","subscribeTopic","bindSubscribeTopic","setSubscribeTopic","dataServerPort","bindDataServerPort","setDataServerPort","webServerPort","bindWebServerPort","setWebServerPort","appStatus","setAppStatus","useEffect","a","config","brokers","host","connect_options","ssl_options","trust_store","key_store","private_key","client_name","publish_data","topics","subscribe_data","topic","data_server","port","web_server","console","log","fetchConfig","fetchStatus","callback","delay","savedCallback","setInterval","clearInterval","useInterval","catch","statusAndMessage","componentName","onSubmit","evt","MainContentPanel","Component","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d410ab4.chunk.js","sourcesContent":["import React from 'react'\n\nconst PxcLang = () => {\n    return (\n        <ul className='pxc-lang'>\n            <li><a id='id_lang_en' href='/'>English</a></li>\n        </ul>\n    )\n};\n\nexport default PxcLang\n","import React from 'react'\n\nconst ProjectName = (props) => {\n    const {projectName} = props;\n\n    return (\n        <div id='c_glb_project_name' className='ellipsis'>\n            <span className='c_glb_project_name'>Project Name</span>\n            <span title=''>: {projectName}</span>\n        </div>\n    )\n};\n\nexport default ProjectName\n","import React from 'react'\n\n\nconst Brand = () => {\n    return (\n        <div className=\"pxc-brandmid\">\n            <a href=\"http://www.phoenixcontact.com\">\n                <img src=\"logo.gif\" width=\"123\"\n                     height=\"32\" alt=\"Phoenix Contact Logo\"\n                     title=\"Link to Phoenix Contact Homepage\"\n                     className=\"pxc-logo\"\n                />\n            </a>\n        </div>\n    )\n};\n\nexport default Brand\n","import React from 'react'\nimport PxcLang from './PxcLang'\nimport ProjectName from './ProjectName'\nimport Brand from './Brand'\n\n\nconst Header = (props) => {\n    const {projectName} = props;\n\n    return (\n        <div id='page-header' className='header'>\n            <div id='pxc-funcnav' className='cf nav'>\n                <PxcLang/>\n                <div className='pxc-func' id='id_div_login' style={{display: 'none'}}>\n                    Login\n                </div>\n            </div>\n            <div className='cf pxc-masthead'>\n                <div className='pxc-r pxc-sl'>\n                    <div className='pxc-r pxc-sr'>\n                        <div className='cf pxc-bdy'>\n                            <Brand/>\n                            <div className='pxc-qsrch'>\n                                <div id='id_div_header_center'>\n                                    <ProjectName\n                                        projectName={projectName}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react'\n\n\nconst Menu = (props) => {\n    const {deviceName, deviceArticle, menuItemsGroups} = props;\n\n    return (\n        <div className='pxc-fcol' id='id_div_mainmenu'>\n            <div className='cf pxc-fcol-flt'>\n                <div className='pxc-p-boxed'>\n                    <div className='pxc-filterpane'>\n                        <a href='/'>\n                            <p className='pxc-filtertitle centered' id='id_div_devdesignation'>\n                                <span>{deviceName}</span>\n                                <br/>\n                                <span>{deviceArticle}</span>\n                            </p>\n                            <div id='id_div_devlogo'> </div>\n                        </a>\n                    </div>\n                </div>\n\n                {menuItemsGroups.map((menuItemGroup) => {\n                    return <div className=\"pxc-p-boxed\" key={menuItemGroup.id}>\n                        <div className=\"c_btn_menuexpand c_btn_menu\" id={menuItemGroup.id}\n                             style={{backgroundPosition: \"-97px -692px\"}}> </div>\n                        <div className=\"pxc-filterpane\">\n                            <p className=\"pxc-filtertitle c_menu_title\"\n                               id=\"id_menu_title_security\">{menuItemGroup.name}</p>\n                            <ul className=\"c_menu_list\" id=\"id_menu_security\">\n                                {menuItemGroup.items.map((menuItem) => {\n                                    return <li key={menuItem.id}>\n                                        <a id={menuItem.id} href={menuItem.href}>{menuItem.name}</a>\n                                    </li>\n                                })}\n                            </ul>\n                        </div>\n                    </div>\n                })}\n            </div>\n            <div className='cf pxc-fcol-flt'>\n            </div>\n        </div>\n    );\n};\n\nexport default Menu;\n","import React, {useRef} from 'react';\n\n\nconst FileInput = (props) => {\n    const {label, name, value, onChange, setTextInput, uploadUrl} = props;\n    const inputRef = useRef();\n\n    const onChangeFileInput = (e) => {\n        if (e.target.files) {\n            const formData = new FormData();\n            formData.append('file', e.target.files[0]);\n\n            fetch(uploadUrl, {\n                method: 'POST',\n                body: formData\n            })\n                .then((res) => {\n                    return res.json()\n                })\n                .then((data) => {\n                    const {filePath} = data;\n                    setTextInput(filePath)\n                })\n        }\n    };\n\n    return (\n        <div>\n            <h4>\n                <span style={{float: \"left\"}}>\n                    {label}\n                </span>\n            </h4>\n            <br/><br/>\n            <div\n                className=\"pxc-f-gradbox\"\n                style={{\n                    width: \"600px\"\n                }}>\n                <input\n                    hidden\n                    type=\"file\"\n                    name={name}\n                    style={{\n                        border: \"1px solid #ccc\",\n                        fontSize: \"14pt\",\n                        padding: \"5px 10px\",\n                        width: \"400px\"\n                    }}\n                    onChange={onChangeFileInput}\n                    ref={inputRef}\n                />\n                <button\n                    className=\"pxc-btn-pa\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        inputRef.current.click();\n                    }}\n                >\n                    <span>Browse...</span>\n                </button>\n\n                <input\n                    type=\"text\"\n                    style={{\n                        border: \"1px solid #ccc\",\n                        width: \"500px\",\n                        fontSize: \"12px\",\n                        padding: \"5px 10px\"\n                    }}\n                    readOnly=\"\"\n                    disabled=\"\"\n                    value={value}\n                    onChange={onChange}\n                />\n                <br/>\n            </div>\n            <br/>\n        </div>\n    )\n};\n\nexport default FileInput\n","import React from 'react'\n\nconst Label = (props) => {\n    const {label} = props;\n\n    return (\n        <label\n            style={{\n                width: \"146px\",\n                display: \"inline-block\",\n                paddingBottom: \"10px\"\n            }}\n        >\n            {label}\n        </label>\n    )\n\n};\n\nexport default Label\n","import React from 'react';\nimport Label from './Label';\n\n\nconst TextInput = (props) => {\n    const {label, placeholder, maxLength, required, name, value, onChange} = props;\n\n    return (\n        <div className=\"form_group\">\n            <Label\n                label={label}\n            />\n            <input\n                type=\"text\"\n                name={name}\n                value={value}\n                onChange={onChange}\n                placeholder={placeholder}\n                maxLength={maxLength}\n                required={required}\n                style={{\n                    width: \"480px\"\n                }}\n            />\n        </div>\n    )\n\n};\n\n\nexport default TextInput\n","import React from 'react';\nimport Label from './Label';\n\n\nexport const StatusEnum = {\n    OK: `OK`,\n    WARN: `WARN`,\n    ERROR: `ERROR`\n};\n\nconst getColorByStatus = (status) => {\n    switch (status) {\n        case StatusEnum.OK:\n            return `green`;\n\n        case StatusEnum.WARN:\n            return `#FFC000`;\n\n        case StatusEnum.ERROR:\n            return `#ED1C24`;\n\n        default :\n            return `#ED1C24`;\n    }\n};\n\nexport const Status = (props) => {\n    const {label, status, message} = props;\n\n    return (\n        <div>\n            <Label\n                label={label}\n            />\n            <span\n                style={{\n                    height: \"15px\",\n                    width: \"15px\",\n                    backgroundColor: getColorByStatus(status),\n                    borderRadius: \"50%\",\n                    display: \"inline-block\",\n                    marginRight: \"6px\"\n                }}> </span>\n            <span\n                style={{color: getColorByStatus(status)}}\n            >\n                {message}\n            </span>\n        </div>\n    )\n};\n","import { useState } from 'react'\n\n\nexport const useTextInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    return {\n        value,\n        setValue,\n        set: () => setValue(\"\"),\n        bind: {\n            value,\n            onChange: event => {\n                setValue(event.target.value);\n            }\n        }\n    };\n};\n","import React, {useState, useEffect} from 'react';\nimport FileInput from './FileInput';\nimport TextInput from './TextInput';\nimport Label from './Label';\nimport {Status, StatusEnum} from './Status';\nimport {useTextInput} from '../hooks/use-text-input';\nimport {getDeviceHostAddress} from '../helpers/utils';\nimport {useInterval} from '../hooks/use-interval';\n\n\nconst Configuration = ({appConfigUrl, appStatusUrl}) => {\n    const {value: brokerAddress, bind: bindBrokerAddress, setValue: setBrokerAddress} = useTextInput('');\n    const {value: rootCaFle, bind: bindRootCaFile, setValue: setRootCaFile} = useTextInput('');\n    const {value: certFile, bind: bindCertFile, setValue: setCertFile} = useTextInput('');\n    const {value: keyFile, bind: bindKeyFile, setValue: setKeyFile} = useTextInput('');\n    const {value: clientId, bind: bindClientId, setValue: setClientId} = useTextInput('');\n    const {value: publishTopic, bind: bindPublishTopic, setValue: setPublishTopic} = useTextInput('');\n    const {value: subscribeTopic, bind: bindSubscribeTopic, setValue: setSubscribeTopic} = useTextInput('');\n    const {value: dataServerPort, bind: bindDataServerPort, setValue: setDataServerPort} = useTextInput('');\n    const {value: webServerPort, bind: bindWebServerPort, setValue: setWebServerPort} = useTextInput('');\n    const [appStatus, setAppStatus] = useState({});\n\n    useEffect(() => {\n        const fetchConfig = async (appConfigUrl) => {\n            const res = await fetch(\n                appConfigUrl\n            );\n            try {\n                const config = await res.json();\n                if (config) {\n                    setBrokerAddress(config.brokers[0].host);\n                    setRootCaFile(config.brokers[0].connect_options.ssl_options.trust_store);\n                    setCertFile(config.brokers[0].connect_options.ssl_options.key_store);\n                    setKeyFile(config.brokers[0].connect_options.ssl_options.private_key);\n                    setClientId(config.brokers[0].client_name);\n                    setPublishTopic(config.brokers[0].publish_data[0].topics);\n                    setSubscribeTopic(config.brokers[0].subscribe_data[0].topic);\n                    setDataServerPort(config.data_server.port);\n                    setWebServerPort(config.web_server.port);\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        };\n        fetchConfig(appConfigUrl);\n    }, [appConfigUrl, setBrokerAddress, setRootCaFile, setCertFile, setClientId,\n        setDataServerPort, setKeyFile, setPublishTopic, setSubscribeTopic, setWebServerPort]);\n\n\n    const fetchStatus = async () => {\n        const res = await fetch(\n            appStatusUrl\n        );\n        try {\n            return await res.json();\n        } catch (e) {\n            return e\n        }\n    };\n\n    useInterval(() => {\n        fetchStatus().then((appStatus) => {\n            setAppStatus(appStatus)\n        }).catch((e) => {\n            setAppStatus({});\n            console.log(e)\n        })\n\n    }, 1000);\n\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n\n        const formData = new FormData();\n        formData.append(`brokers_0_host`, brokerAddress);\n        formData.append(`brokers_0_client_name`, clientId);\n        formData.append(`brokers_0_connect_options_ssl_options_trust_store`, rootCaFle);\n        formData.append(`brokers_0_connect_options_ssl_options_key_store`, certFile);\n        formData.append(`brokers_0_connect_options_ssl_options_private_key`, keyFile);\n        formData.append(`brokers_0_publish_data_0_topics_0`, publishTopic);\n        formData.append(`brokers_0_subscribe_data_0_topic`, subscribeTopic);\n        formData.append(`data_server_port`, dataServerPort);\n        formData.append(`web_server_port`, webServerPort);\n\n        fetch(appConfigUrl, {\n            method: 'POST',\n            body: formData\n        })\n            .then((res) => {\n                return res.json()\n            })\n    };\n\n    const statusAndMessage = (appStatus, componentName) => {\n        const status = (appStatus[componentName] && appStatus[componentName].status)\n            ? appStatus[componentName].status\n            : StatusEnum.ERROR;\n\n        const message = (appStatus[componentName] && appStatus[componentName].message)\n            ? appStatus[componentName].message\n            : `Unknown`;\n\n        return {status, message}\n    };\n\n    return (\n        <div className=\"cf pxc-grid-4\">\n            <h1>\n                <span>Configuration</span>\n            </h1>\n            <div className=\"pxc-plt-ctrl\">\n                <div className=\"pxc-p-plain\">\n                    <div className=\"pxc-f-gradbox\">\n                        <form onSubmit={handleSubmit}>\n                            <TextInput\n                                label={`Broker address`}\n                                placeholder={``}\n                                maxLength={63}\n                                name={`broker_address`}\n                                {...bindBrokerAddress}\n                            />\n                            <Status\n                                label={`Status`}\n                                {...statusAndMessage(appStatus, `mqttClient`)}\n                            />\n                            <FileInput\n                                label={`Root CA`}\n                                name={`root_ca_file`}\n                                uploadUrl={`${getDeviceHostAddress()}/upload`}\n                                setTextInput={setRootCaFile}\n                                {...bindRootCaFile}\n                            />\n                            <FileInput\n                                label={`Certificate`}\n                                name={`cert_file`}\n                                uploadUrl={`${getDeviceHostAddress()}/upload`}\n                                setTextInput={setCertFile}\n                                {...bindCertFile}\n                            />\n                            <FileInput\n                                label={`Private key`}\n                                name={`key_file`}\n                                uploadUrl={`${getDeviceHostAddress()}/upload`}\n                                setTextInput={setKeyFile}\n                                {...bindKeyFile}\n                            />\n\n                            <TextInput\n                                label={`Cliend id`}\n                                placeholder={``}\n                                maxLength={63}\n                                name={`client_id`}\n                                {...bindClientId}\n                            />\n                            <TextInput\n                                label={`Publish to topic`}\n                                placeholder={``}\n                                maxLength={63}\n                                name={`publish_topic`}\n                                {...bindPublishTopic}\n                            />\n                            <TextInput\n                                label={`Subscribe to topic`}\n                                placeholder={``}\n                                maxLength={63}\n                                name={`subscribe_topic`}\n                                {...bindSubscribeTopic}\n                            />\n                            <TextInput\n                                label={`Data server port`}\n                                placeholder={``}\n                                maxLength={63}\n                                name={`data_server_port`}\n                                {...bindDataServerPort}\n                            />\n                            <Status\n                                label={`Status`}\n                                {...statusAndMessage(appStatus, `dataServer`)}\n                            />\n                            <TextInput\n                                label={`Web server port`}\n                                placeholder={``}\n                                maxLength={63}\n                                name={`web_server_port`}\n                                {...bindWebServerPort}\n                            />\n                            <Status\n                                label={`Status`}\n                                {...statusAndMessage(appStatus, `webServer`)}\n                            />\n\n                            <div className=\"form_group\">\n                                <Label\n                                    label={`Save configuration`}\n                                />\n                                <button\n                                    type=\"submit\"\n                                    className=\"pxc-btn-pa\"\n                                >\n                                    <span>Save</span>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Configuration\n","// By Dan Abramov @ overreacted.io\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nimport {useEffect, useRef} from 'react';\n\n\nexport const useInterval = (callback, delay) => {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n};\n","export const getDeviceHostAddress = () => {\n  return process.env.NODE_ENV === `development`\n      ? `http://localhost:4000`\n      : ``;\n};\n","import React, {Component} from 'react';\nimport Configuration from './Configuration';\nimport {getDeviceHostAddress} from '../helpers/utils';\n\nconst appConfigUrl = `${getDeviceHostAddress()}/config`;\nconst appStatusUrl = `${getDeviceHostAddress()}/status`;\n\nclass MainContentPanel extends Component {\n    render() {\n        return (\n                <Configuration\n                    appConfigUrl={appConfigUrl}\n                    appStatusUrl={appStatusUrl}\n                />\n        );\n    }\n}\n\nexport default MainContentPanel;\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <ul className=\"cf footer\" id=\"page-footer\">\n            <li className=\"pxc-copy\">&copy; 2019 Phoenix Contact</li>\n        </ul>\n    )\n};\n\nexport default Footer\n","import React from 'react';\nimport Header from './components/Header'\nimport Menu from './components/Menu'\nimport MainContentPanel from './components/MainContentPanel'\nimport Footer from './components/Footer'\n\n\nconst menuItemsGroups = [\n    {\n        id: `configuration`,\n        name: `Configuration`,\n        href: `#`,\n        items: [\n            {\n                id: `mqtt`,\n                name: `MQTT`,\n                href: `#`\n            }\n        ]\n    }\n];\n\nfunction App() {\n    return (\n        <div id=\"pxc-all\">\n            <Header\n                deviceName={`AXC F 2152`}\n                projectName={`MQTT client dataserver`}\n            />\n            <div id=\"pxc-main\">\n                <div className=\"cf pxc-grid-2\">\n                    <div className=\"pxc-r pxc-sl\">\n                        <div className=\"pxc-r pxc-sr\">\n                            <div className=\"cf pxc-bdy\">\n                                <div className=\"cf pxc-grid-5\">\n                                    <Menu\n                                        deviceName={`AXC F 2152`}\n                                        deviceArticle={`2404267`}\n                                        menuItemsGroups={menuItemsGroups}\n                                    />\n                                </div>\n                                <MainContentPanel/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"pxc-r pxc-bl\">\n                        <div className=\"pxc-r pxc-br\">\n                        </div>\n                    </div>\n                </div>\n                <div className=\"cf pxc-grid-6\">\n                    <div className=\"pxc-plt-ctrl\">\n                        <div className=\"cf pxc-grid-6\">\n                            <Footer/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}